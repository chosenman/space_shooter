<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title></title>

    <!--NO CACHE-->
    <meta http-equiv="cache-control" content="max-age=0" />
    <meta http-equiv="cache-control" content="no-cache" />
    <meta http-equiv="expires" content="0" />
    <meta http-equiv="expires" content="Tue, 01 Jan 1980 1:00:00 GMT" />
    <meta http-equiv="pragma" content="no-cache" />

    <script type ="text/javascript" src="/socket.io/socket.io.js"></script>

    <!-- MOBILE DEVICE -->
    <meta name="viewport" content="user-scalable=no, width=device-width">
    <!-- <meta name="viewport" content="width=device-width, initial-scale=1"> -->

    <link rel="stylesheet" type="text/css" href="static-version/gamebg.css">
    <link rel="stylesheet" type="text/css" href="static-version/game.css">
        <link rel="stylesheet" type="text/css" href="modals.css">

      <script src="bs_frpge/jquery.min.js"></script>

  </head>
  <body>

    <% if(typeof(user) == 'undefined' ) { %>
      <script type="text/javascript">alert("user object not in template")</script>
    <% } %>

      <!-- ENEMY SHIP  -->
          <div id="enemyWrapper">
              <div id="movezoneEnemy">
                <div id="spaceshipEnemy" ></div>
                <div class="enemyScore">
                  <div class="hWrapper">
                    <div class="hBar"></div>
                    <span></span>
                  </div>
                  <b></b>
                </div>
              </div>
          </div>
      <!-- ENEMY SHIP  -->

<div id="debugClass">

</div>

      <div id="fire"></div>

        <!-- SPACE SHIP -->
              <div id="pageone">
                  <div id="movezone">
                    <div id="spaceship" ></div>
                    <div id="<%= user.id %>" class="myScore">
                      <div class="hWrapper">
                        <div class="hBar"></div>
                        <span></span>
                      </div>

                      <b><%= user.id %></b>
                    </div>
                  </div>
              </div>
        <!-- SPACE SHIP -->
        <!-- <img id="Bullet" src="static-version/bullet.png" height="54" width="15" /> -->





<!-- refreshing everywhere-->
<p id="files"></p>

      <script type="text/javascript">
          var seconds = new Date().getTime() / 1000;
          var seconds_d = Math.floor(seconds)
          var version = '?version=';
          var style_css = `<link rel="stylesheet" type="text/css" href="style.css${version}${seconds_d}">`

          var p_style = document.getElementById('files');
          p_style.innerHTML = style_css;
      </script>


      <!--<span class="outputTouched" >v.0.0003</span>-->
<script type="text/javascript">
var enemyId = window.localStorage.getItem("enemyId");

document.getElementsByClassName("enemyScore")[0].setAttribute("id", enemyId);

var socket = io.connect();


var Shooted=false,
    BulletY=-25,
    BulletX=17,
    BulletSpeed = 8,
    spaceshipHealth = 30,
    enemyHealth = 30,
    _spaceshipHealth = spaceshipHealth,
    _enemyHealth = enemyHealth,
    myName = "",
    eName = "",
    counterU = 1, // UPDATING ONCE BATTLE OBJECTS
    battleObj = {},
    moveAmount = 1,
    finishBattleMessage = "Hi there!";

var prL, prT;

// taking dimensions of the window
var w = window,
    d = document,
    e = d.documentElement,
    g = d.getElementsByTagName('body')[0],
    window_x = Math.max(w.innerWidth, e.clientWidth, g.clientWidth),
    window_y = Math.max(w.innerHeight, e.clientHeight, g.clientHeight);

    var iOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;
    // var window_x = (iOS) ? screen.width : Math.max(w.innerWidth, e.clientWidth, g.clientWidth);

// debug INFO
// $('#debugClass').append("w.innerWidth = " + w.innerWidth);
// $('#debugClass').append("<br>g.clientWidth = " + g.clientWidth);
// $('#debugClass').append("<br>e.clientWidth = " + e.clientWidth);
// $('#debugClass').append("<br>window_x = " + window_x);
// $('#debugClass').append("<br>window_y = " + window_y);
// $('#debugClass').append("<br>screen.width = " + screen.width);
// debug INFO

var spaceshipEnemy =   document.querySelector('#spaceshipEnemy');

var spaceship = document.querySelector('#spaceship');
var movezone = document.querySelector('#movezone');
var pageone = document.querySelector('#pageone');

    pageone.style.width = window_x+'px';
    movezone.style.width = window_x-10+"px";
    // spaceship.style.left = window_x/2+"px";

var maxX = window_x - spaceship.clientWidth;
// var maxY = movezone.clientHeight - spaceship.clientWidth;
var maxY = (iOS) ? window_x - spaceship.clientWidth : window_x - spaceship.clientWidth;

spaceship.style.left = window_x/2 - 30 + "px";

var topFire, leftFire, left;
function handleOrientation(event) {
    var x = event.beta;  // In degree in the range [-180,180]
    var y = event.gamma * 5; // In degree in the range [-90,90]

    // Because we don't want to have the device upside down
    // We constrain the x value to the range [-90,90]
    if (x >  90) { x =  90};
    if (x < -90) { x = -90};

    // To make computation easier we shift the range of
    // x and y to [0,180]
    x += 90;
    y += 90;

    // It center the positioning point to the center of the spaceship
    // var top = Math.abs(x/2 + 45); //
    left = (Math.abs(maxY*y/180) - 30 );
    if(left < 0) {
        left = Math.abs(left);
    }

    if (left > (window_x - 40) )  { left = window_x - 40};
    // output.innerHTML += "top: " + top + "\n";
    leftFire = left;

    // spaceship.style.top  = top + "px";
    spaceship.style.left = left + "px";

}

window.addEventListener('deviceorientation', handleOrientation);

prL = spaceship.offsetLeft;
//---------------
// SOCKETS STUFF
//---------------
    function updateShipCoordinates(){

      if(Math.abs(spaceship.offsetLeft - prL) > 2) {

        prL = spaceship.offsetLeft;
        socket.emit('gameCoordinateChange',{
          <% if(typeof(user) != 'undefined' ) { %>
            left: spaceship.offsetLeft,
            id: "<%= user.id %>"
            <% } %>
          });

          updateBackground();
      }

      // first update
      if(counterU === 1){
        socket.emit('gameCoordinateChange',{
          <% if(typeof(user) != 'undefined' ) { %>
            left: spaceship.offsetLeft,
            id: "<%= user.id %>",
            firstUpdate: true
            <% } %>
          });
          counterU = 0;
      }
    }

    // receiving data of updated coordinates of ENEMY SHIP
    var fightChannelId = "fightChannelId" + "<%= user.id %>";
    socket.on(fightChannelId, function(data){
      spaceshipEnemy.style.right = data.left + "px";

      // RECEIVENG DATA ON FIRST LOAD
      if(data.firstUpd){
        battleObj = data;
        updateAll();
      }
      // ================================================

      // RECEIVENG DATA WHEN ENEMY HAVE SHOOTED THE BULLET
      if(data.shoot){
        Shoot(data)
      }
      // ================================================

      // RECEIVENG DATA AFTER HIT
      if(data.hit){
        battleObj = data;
        updateAll();
      }
      // ================================================

      // RECEIVENG DATA AFTER WON
      if(data.won){
        finishBattleMessage = "You won!"
        challangeComplete();
      }
      // ================================================

      // RECEIVENG DATA AFTER LOST
      if(data.lost){
        finishBattleMessage = "You lost..."
        challangeComplete();
      }
      // ================================================
    })


    setInterval(updateShipCoordinates, 10);

//---------------------
// Touch stuff:
//---------------------
var fire   = document.querySelector('#fire');

function Shoot(enemy)
  {

      var seconds = new Date().getTime();
      var seconds_d = Math.floor(seconds);
      var bulletID = "bullet" + seconds_d;

      BulletY = 150 - spaceship.offsetTop;

      var leftCoordinate=spaceship.offsetLeft + 12 + "px";

      // FIRING BULLET INTO OPPONENT
      if(!enemy.shoot){
        fire.style.display = "none"
        setTimeout(function(){fire.style.display = "block"},200)

        // SENDING TO OPPONENT THAT WE HAVE SHOOTED THE BULLET
        socket.emit('gameCoordinateChange',{
          <% if(typeof(user) != 'undefined' ) { %>
            shoot: true,
            left: spaceship.offsetLeft,
            id: "<%= user.id %>"
            <% } %>
        })
        // -------------------------------------------------
        var bulletHTML = `<img id="${bulletID}" src="static-version/bullet.png" height="54" style="position: absolute; left:${leftCoordinate}" width="15" />`;
        $('body').prepend(bulletHTML);

        fireBullet({
            id:bulletID,
            bulletY: BulletY
        });
        Shooted=true;
      }
      // RECEIVING BULLET FROM THE OPPONENT
      else {
        var leftBulletX = spaceshipEnemy.offsetLeft + 12 + "px";
        var bulletHTML = `<img id="${bulletID}" src="static-version/rbullet.png" height="54" style="position: absolute; left:${leftBulletX}" width="15" />`;
        $('body').prepend(bulletHTML);
        console.log(enemy.kY);

        fireBullet({
            id:bulletID,
            bulletY: BulletY,
            kY: enemy.kY
        });
      }

  }

//  <img id="Bullet" src="static-version/bullet.png" height="54" width="15" />


function fireBullet(newBullet)
  {
    var Bullet=document.getElementById(newBullet.id);

    if(!newBullet.kY){
        Bullet.style.bottom = newBullet.bulletY + "px";
        if(newBullet.bulletY <= window.innerHeight )
        {
          newBullet.bulletY += BulletSpeed;
          Bullet.style.bottom = newBullet.bulletY + "px";
          setTimeout(function(){
            fireBullet(newBullet)
          },10);
        } else {
          wasteBullet(newBullet);
        }
    }
    // firing bulolet from opponent
    else if(Bullet) {

        Bullet.style.top = newBullet.bulletY + "px";
        if(newBullet.bulletY <= window.innerHeight ){

            newBullet.bulletY += Math.round(BulletSpeed * newBullet.kY);
            Bullet.style.top = newBullet.bulletY + "px";
            ifHited(newBullet);
            setTimeout(function(){fireBullet(newBullet)},10);
        } else {
          wasteBullet(newBullet);
        }
    }

  }

function wasteBullet(newBullet){
    // Bullet.style.left=BulletX + "px";
    Shooted=false;
    var element = document.getElementById(newBullet.id);
    element.outerHTML = "";
    delete element;
  }

function showHealth(){
    var myHealthWidth = Math.round(spaceshipHealth*100/_spaceshipHealth) + "%";
    $("#"+"<%= user.id %> span").text(spaceshipHealth + " / " + _spaceshipHealth);
    $("#"+"<%= user.id %> .hBar").css("width", myHealthWidth);

    var enHealthWidth = Math.round(enemyHealth*100/_enemyHealth) + "%";
    $("#"+ enemyId + " span").text(enemyHealth + " / " + _enemyHealth);
    $("#"+ enemyId + " .hBar").css("width", enHealthWidth);


    // ID SHOW
    // $("#"+"<%= user.id %> b").text("<%= user.id %>");
    // $("#"+ enemyId + " b").text(enemyId);

    // NAME SHOW
    $("#"+"<%= user.id %> b").text(myName);
    $("#"+ enemyId + " b").text(eName);
}
// spaceshipHealth = data["<%= user.id %>"].hp;
// enemyHealth = data[data["<%= user.id %>"].opponentId].hp;
function updateAll(){

    spaceshipHealth = battleObj["<%= user.id %>"].hp;
    enemyHealth = battleObj[enemyId].hp;

    myName = battleObj["<%= user.id %>"].first_name + " "+ battleObj["<%= user.id %>"].last_name;
    eName = battleObj[enemyId].first_name + " "+ battleObj[enemyId].last_name;

    spaceshipEnemy.style.right = battleObj[enemyId].left + "px";

    showHealth()
}


// describing if enemy's bullet hit into our ship
function ifHited(newBullet){
  var Bullet=document.getElementById(newBullet.id),
      bOT = Bullet.offsetTop,
      bOL = Bullet.offsetLeft,
      sOT = spaceship.offsetTop + document.getElementById("pageone").offsetTop,
      sOL = spaceship.offsetLeft,
      sWidth = 40;

  if( (bOL >= (sOL - 3) && bOL <= sOL + sWidth + 3) &&
      bOT >= sOT) {

        socket.emit('gameCoordinateChange',{
          <% if(typeof(user) != 'undefined' ) { %>
            hit: true,
            left: spaceship.offsetLeft,
            id: "<%= user.id %>"
            <% } %>
        })

        wasteBullet(newBullet);
      }
}

fire.addEventListener('touchstart', Shoot);
fire.addEventListener('click', Shoot);


///------------------
// KEYBOARD INTERFACE
///------------------


window.addEventListener('keydown', handleKeyDown, true);
window.addEventListener('keyup', handleKeyUp, true);
setInterval(readKeyboard, 9);

var maxspeed = 1,
    xforce = 0,
    pixelx = 0,
    direction,
    key_left = false,
    key_right = false,
    key_fire = false;

function readKeyboard(){
    if (key_left){
      xforce--;
      direction = "left";
    }

    if (key_right){
        xforce++;
        direction = "right";
    }

    if (xforce > maxspeed)
        xforce = maxspeed;
    if (xforce < -maxspeed)
        xforce = -maxspeed;

    if (!key_left && !key_right){
               pixelx = 0;
               xforce = 0;
    }
    else {
               pixelx += xforce;
    }

    if (direction == "left"){
      if( spaceship.offsetLeft > 0 && key_left){
        var left_change = spaceship.offsetLeft - Math.abs(pixelx);
        if( left_change <= 0){
          left_change = spaceship.offsetLeft;
        }
        spaceship.style.left = left_change + "px";
      }
    }
    if(direction == "right") {
      if( spaceship.offsetLeft <= maxX && key_right){
        var left_change = spaceship.offsetLeft + Math.abs(pixelx);
        if (left_change < maxX){
          if( (maxX - left_change) <= 0  ){
            left_change = maxX;
          }
          spaceship.style.left = left_change + "px";
        }
      }
    }


    // FIRE KEY
    if(key_fire && fire.style.display != "none"){
      Shoot({shoot:undefined})
    }
}


function handleKeyDown(event){
        if (event.keyCode == 37)
                key_left = true;
        else if (event.keyCode == 39)
            key_right = true;
        else if (event.keyCode == 32)
            key_fire = true;
    }

function handleKeyUp(event){
           if (event.keyCode == 37)
                key_left = false;
           else if (event.keyCode == 39)
                key_right = false;
           else if (event.keyCode == 32)
                key_fire = false;
    }

var value;
function updateBackground(){
  value = "background-position-x: -" + spaceship.offsetLeft/10 + "px;";
  document.getElementsByTagName("html")[0].setAttribute("style", value );
}
</script>


<!-- ++++++++++++ -->
<!--    modals   -->
<!-- ++++++++++++ -->

<!--    challange INVITE   -->
    <div id="waitBG">
      <div class="stabilize">
          <div id="modalchallenge">

                <b id="waitingOpponent" style="margin-top:1em;display:block;"></b>

            <span id="challangeButtons">
              <img src="img/wait.gif" alt="" style="margin-top:15px; padding-top:0;">
              <p style="margin-top:1em;">redirecting you to control panel...</p>
            </span>
          </div>
      </div>
    </div>

  <script type="text/javascript">
  //  WHEN CHALLANGE IS COMPLEte
  // ---------------------------
      function challangeComplete(){

        document.getElementById("waitBG").style.display = "block";
        document.getElementById("waitingOpponent").innerHTML = `
        <h2 style="margin:0;padding:0;">` + finishBattleMessage + `</h2>`;
        setTimeout(function(){
          window.location = "/dashboard";
        }, 3000)
      }
  </script>

      <link rel="stylesheet" href="static-version/jquery.mobile-1.4.5.min.css">
      <!--<script src="https://code.jquery.com/jquery-1.11.3.min.js"></script>-->

  </body>
</html>
